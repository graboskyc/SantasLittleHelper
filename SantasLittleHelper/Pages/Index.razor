@layout NavlessLayout
@page "/"
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager


<div class="ctr_spin_parent" style="background-color:#fff;"><div class="ctr_ctr_child">

        <h1 style="text-align:center;color:#A20025;">Please Login</h1>
        <img src="resources/santa.png" height="100" style="text-align:center;padding:10px;" /><br />
        
        @if(failedLogin) {
            <div class="alert alert-danger" role="alert">Your email address or password is incorrect.</div>
        }

        @if(!isReset) {

            <label for="txt_username" class="col-form-label col-form-label-md">Email Address</label>
            <input type="text" name="txt_username" id="txt_username" @bind="username" @bind:event="onchange" class="form-control form-control-lg" placeholder="Email" />

            <label for="txt_password" class="col-form-label col-form-label-md">Password</label>
            <input type="password" name="txt_password" id="txt_password" @bind="password" @bind:event="onchange" class="form-control form-control-lg" placeholder="Password" />

            @if(!isLoading) {
                <button class="btn btn-santa btn-lg" @onclick="RunLogin" id="btn_login">Login</button>
            } else {
                <button class="btn btn-santa btn-lg" disabled ><span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span> Logging In...</button>
            }
        } else {
            <p>Check your email for reset link</p>
        }

        <br><br><br><br><br><br><br><br>

</div></div>

@code {
    private bool isLoading = false;
    private bool isReset = false;
    private bool loginSuccess = false;
    private bool failedLogin = false;
    private string username = "";
    private string password;

    private async Task RunLogin() {
        isLoading = true;
        loginSuccess = await JSRuntime.InvokeAsync<bool>("login", username, password);
        if(loginSuccess) {
            NavigationManager.NavigateTo("/Home");
        } else {
            failedLogin = true;
        } 
        isLoading = false;
    }

    private async Task RunReset() {
        isLoading = true;
        await JSRuntime.InvokeVoidAsync("resetUser", username);
        isReset = true;
    }
    
}